AWSTemplateFormatVersion: 2010-09-09
Description: Establishing an Architecture

Parameters:
  EnvironmentName:
    Description: Select the environment 
    Type: String
    Default: dev
    AllowedValues: 
      - dev
      - prod
      - qa

  InstantType:
    Description: Enter the type of instance
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
    
  Region:
    Description: Select the region
    Type: String
    Default: us-east-1
    AllowedValues:
      - us-east-1
      - us-east-2
      - us-west-1

  VPCcidr:
    Description: enter value
    Type: String
    Default: 10.234.152.0/23

  PUBLICSUBNET1CIDR:
    Description: enter value
    Type: String
    Default: 10.234.152.0/27

  PUBLICSUBNET2CIDR:
    Description: enter value
    Type: String
    Default: 10.234.152.128/27

  PRIVATESUBNET1CIDR:
    Description: enter value
    Type: String
    Default: 10.234.153.0/27

  PRIVATESUBNET2CIDR:
    Description: enter value
    Type: String
    Default: 10.234.153.128/27

Mappings:
  Myregion:
    us-east-1:
      amiid: ami-05fa00d4c63e32376
    us-east-2:
      amiid: ami-0cd3dfa4e37921605
    us-west-1:
      amiid: ami-018d291ca9ffc002f

Conditions:
  InstanceSelect: !Equals [!Ref EnvironmentName, prod]

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups: 
      - Label:
          default: "Environment Configuration"          
        Parameters:
          - EnvironmentName
      - Label:
          default: "VPC Configuration"
        Parameters:
          - VPCcidr
          - PUBLICSUBNET1CIDR
          - PUBLICSUBNET2CIDR
          - PRIVATESUBNET1CIDR
          - PRIVATESUBNET2CIDR
    ParameterLabels:
      EnvironmentName:
        default: "Select the deployment environment "
      
Resources:
  VPCaniket:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VPCcidr

  PUBLICSUBNET1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCaniket
      CidrBlock: !Ref PUBLICSUBNET1CIDR
      AvailabilityZone: us-east-1a
      
  PUBLICSUBNET2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCaniket
      CidrBlock: !Ref PUBLICSUBNET2CIDR
      AvailabilityZone: us-east-1b
  
  PRIVATESUBNET1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCaniket
      CidrBlock: !Ref PRIVATESUBNET1CIDR
      AvailabilityZone: us-east-1a
  
  PRIVATESUBNET2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCaniket
      CidrBlock: !Ref PRIVATESUBNET2CIDR
      AvailabilityZone: us-east-1b

  AniketPublicRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: VPCaniket
      Tags:
      - Key: Owner
        Value: aniket.tripathi@intuitive.cloud

  AniketPrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: VPCaniket
      Tags:
      - Key: Owner
        Value: aniket.tripathi@intuitive.cloud

  AniketSubnetRouteTableAssociation1a:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !GetAtt PUBLICSUBNET1.SubnetId
      RouteTableId:
        Ref: AniketPublicRouteTable1

  AniketSubnetRouteTableAssociation1b:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !GetAtt PUBLICSUBNET2.SubnetId
      RouteTableId:
        Ref: AniketPublicRouteTable1

  AniketSubnetRouteTableAssociation2a:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !GetAtt PRIVATESUBNET1.SubnetId
      RouteTableId:
        Ref: AniketPrivateRouteTable2

  AniketSubnetRouteTableAssociation2b:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !GetAtt PRIVATESUBNET2.SubnetId
      RouteTableId:
        Ref: AniketPrivateRouteTable2

  AniketInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Owner
        Value: aniket.tripathi@intuitive.cloud
    
  AniketRoute:
    Type: AWS::EC2::Route
    DependsOn: [AniketInternetGateway]
    Properties:
      RouteTableId: !Ref AniketPublicRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref AniketInternetGateway

  AniketInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref AniketInternetGateway
      VpcId: !Ref VPCaniket

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      ConnectivityType: private
      SubnetId: !Ref PUBLICSUBNET2
      Tags:
        - Key: Owner
          Value: aniket.tripathi@intuitive.cloud

  AniketNatGatewayRouteTableAssociation1:
   DependsOn: [NatGateway1]
   Type: AWS::EC2::Route
   Properties:
      RouteTableId: !Ref AniketPrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1

  AniketSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Securitygroup for EC2
      GroupName: Assignmentsg
      SecurityGroupEgress: 
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags: 
        - Key: Owner
          Value: aniket.tripathi@intuitive.cloud
      VpcId: !Ref VPCaniket

  AniketConfigurations:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties: 
      ImageId: ami-05fa00d4c63e32376
      InstanceType: !Ref InstantType
      LaunchConfigurationName: Launchconfig
      SecurityGroups: 
        - !Ref AniketSecurityGroup   
      UserData: 
          Fn::Base64: !Sub |
            #!/bin/bash
            yum update -y 
            yum install -y httpd 
            systemctl start httpd 
            systemctl enable httpd
      

  AniketTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      Name: anikettg
      Port: 80
      Protocol: HTTP
      ProtocolVersion: HTTP1
      VpcId: !Ref VPCaniket
  
  AniketLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      Scheme: internet-facing
      Subnets:
        - !Ref PUBLICSUBNET1
        - !Ref PUBLICSUBNET2
      Tags:
        - Key: Owner
          Value: aniket.tripathi@intuitive.cloud

  AniketASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    DependsOn: [AniketLB]
    Properties: 
      LaunchConfigurationName: !Ref AniketConfigurations
      AutoScalingGroupName: AniketAutoScalingGroupAsg     
      TargetGroupARNs: !GetAtt AniketTargetGroup.LoadBalancerArns
      AvailabilityZones:
        - us-east-1a
        - us-east-1b
      MinSize: 1
      MaxSize: 3
      DesiredCapacity: 2
      VPCZoneIdentifier: 
      - !Ref PUBLICSUBNET1
      - !Ref PUBLICSUBNET2
        


  
          
